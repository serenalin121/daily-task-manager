{"ast":null,"code":"var _jsxFileName = \"/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/Newform.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleChangeDueDate = event => {\n      this.setState({\n        dueDate: event.target.value\n      });\n    };\n\n    this.handleChangeComplete = event => {\n      this.setState({\n        isComplete: event.target.checked\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      fetch(this.props.baseUrl + \"/tasks\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: this.state.name,\n          dueDate: this.state.dueDate,\n          isComplete: this.state.isComplete\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        this.props.addTask(data);\n        this.setState({\n          name: \"\",\n          dueDate: \"\",\n          isComplete: null\n        });\n      }).catch(error => console.log({\n        Error: error\n      }));\n    };\n\n    this.state = {\n      name: \"\",\n      dueDate: \"\",\n      isComplete: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Task:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: e => this.handleChangeName(e),\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dueDate\",\n        children: \"Due Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date-local\",\n        id: \"dueDate\",\n        onChange: e => this.handleChangeDueDate(e),\n        value: this.state.dueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"isComplete\",\n        children: \"Completed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.isComplete,\n        onChange: e => this.handleChangeComplete(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        value: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/Newform.js"],"names":["React","Component","NewForm","constructor","props","handleChangeName","event","setState","name","target","value","handleChangeDueDate","dueDate","handleChangeComplete","isComplete","checked","handleSubmit","preventDefault","fetch","baseUrl","method","body","JSON","stringify","state","headers","then","res","json","data","addTask","catch","error","console","log","Error","render","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      dueDate: \"\",\n      isComplete: false,\n    };\n  }\n\n  handleChangeName = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n\n  handleChangeDueDate = (event) => {\n    this.setState({\n      dueDate: event.target.value,\n    });\n  };\n\n  handleChangeComplete = (event) => {\n    this.setState({\n      isComplete: event.target.checked,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(this.props.baseUrl + \"/tasks\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: this.state.name,\n        dueDate: this.state.dueDate,\n        isComplete: this.state.isComplete,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        this.props.addTask(data);\n        this.setState({\n          name: \"\",\n          dueDate: \"\",\n          isComplete: null,\n        });\n      })\n      .catch((error) => console.log({ Error: error }));\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\">Task:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={(e) => this.handleChangeName(e)}\n          value={this.state.name}\n        />\n        <label htmlFor=\"dueDate\">Due Date:</label>\n        <input\n          type=\"date-local\"\n          id=\"dueDate\"\n          onChange={(e) => this.handleChangeDueDate(e)}\n          value={this.state.dueDate}\n        />\n        <label htmlFor=\"isComplete\">Completed:</label>\n        <input\n          type=\"checkbox\"\n          checked={this.state.isComplete}\n          onChange={(e) => this.handleChangeComplete(e)}\n        />\n        <input className=\"submit-button\" type=\"submit\" value=\"Add\" />\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}