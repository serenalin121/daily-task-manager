{"ast":null,"code":"var _jsxFileName = \"/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/SignIn.js\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handleChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.signInUser = async e => {\n      e.preventDefault();\n      const url = this.props.baseUrl + \"/users/\" + (this.state.isExistUser ? \"signin\" : \"signup\");\n\n      try {\n        const response = await fetch(url, {\n          method: \"POST\",\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: \"include\"\n        });\n\n        if (response.status === 200) {\n          this.setState({\n            username: \"\",\n            password: \"\"\n          });\n          this.props.isLoggedIn(true);\n        }\n      } catch (err) {\n        console.log(\"Error => \", err);\n      }\n    };\n\n    this.handleLoginMode = () => {\n      this.setState({\n        isExistUser: !this.state.isExistUser\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isExistUser: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.state.isExistUser ? \"Sign In\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.signInUser,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your email with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => this.handleChangeUsername(e),\n            value: this.state.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: e => this.handleChangePassword(e),\n            value: this.state.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: this.state.isExistUser ? \"Sign In\" : \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            variant: \"submit\",\n            className: \"signInToggle\",\n            onClick: this.handleLoginMode,\n            children: this.state.isExistUser ? \"Create new account\" : \"Login with existing account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/SignIn.js"],"names":["React","Component","Button","Form","Container","SignIn","constructor","props","handleChangeUsername","event","setState","username","target","value","handleChangePassword","password","signInUser","e","preventDefault","url","baseUrl","state","isExistUser","response","fetch","method","body","JSON","stringify","headers","credentials","status","isLoggedIn","err","console","log","handleLoginMode","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Container } from \"react-bootstrap\";\n\nexport default class SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isExistUser: true,\n    };\n  }\n\n  handleChangeUsername = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  handleChangePassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  signInUser = async (e) => {\n    e.preventDefault();\n    const url =\n      this.props.baseUrl +\n      \"/users/\" +\n      (this.state.isExistUser ? \"signin\" : \"signup\");\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n      });\n\n      if (response.status === 200) {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n\n        this.props.isLoggedIn(true);\n      }\n    } catch (err) {\n      console.log(\"Error => \", err);\n    }\n  };\n\n  handleLoginMode = () => {\n    this.setState({ isExistUser: !this.state.isExistUser });\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          <h2>{this.state.isExistUser ? \"Sign In\" : \"Sign Up\"}</h2>\n          <Form onSubmit={this.signInUser}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\" />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n\n            <label htmlFor=\"name\">Username:</label>\n            <input\n              type=\"text\"\n              onChange={(e) => this.handleChangeUsername(e)}\n              value={this.state.username}\n            />\n            <label htmlFor=\"name\">Password:</label>\n            <input\n              type=\"password\"\n              onChange={(e) => this.handleChangePassword(e)}\n              value={this.state.password}\n            />\n            <input\n              type=\"submit\"\n              value={this.state.isExistUser ? \"Sign In\" : \"Sign Up\"}\n            />\n            <Button\n              type=\"button\"\n              variant=\"submit\"\n              className=\"signInToggle\"\n              onClick={this.handleLoginMode}\n            >\n              {this.state.isExistUser\n                ? \"Create new account\"\n                : \"Login with existing account\"}\n            </Button>\n          </Form>\n        </Container>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}