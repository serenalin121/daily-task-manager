{"ast":null,"code":"var _jsxFileName = \"/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/src/components/Newform.js\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleChangeDueDate = event => {\n      this.setState({\n        dueDate: event.target.value\n      });\n    };\n\n    this.handleChangeComplete = event => {\n      this.setState({\n        isComplete: event.target.checked\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      fetch(this.props.baseUrl + \"/tasks\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: this.state.name,\n          dueDate: this.state.dueDate,\n          isComplete: this.state.isComplete\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        this.props.addTask(data);\n        this.setState({\n          name: \"\",\n          dueDate: \"\",\n          isComplete: false\n        });\n      }).catch(error => console.log({\n        Error: error\n      }));\n    };\n\n    this.state = {\n      name: \"\",\n      dueDate: \"\",\n      isComplete: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 task\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          md: {\n            span: 6,\n            offset: 6\n          },\n          type: \"text\",\n          onChange: e => this.handleChangeName(e),\n          value: this.state.name,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 date\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Due Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          onChange: e => this.handleChangeDueDate(e),\n          value: this.state.dueDate,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 complete\",\n        controlId: \"formBasicCheckbox\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Completed?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          checked: this.state.isComplete,\n          onChange: e => this.handleChangeComplete(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/src/components/Newform.js"],"names":["React","Component","Button","Form","NewForm","constructor","props","handleChangeName","event","setState","name","target","value","handleChangeDueDate","dueDate","handleChangeComplete","isComplete","checked","handleSubmit","preventDefault","fetch","baseUrl","method","body","JSON","stringify","state","headers","credentials","then","res","json","data","addTask","catch","error","console","log","Error","render","span","offset","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      dueDate: \"\",\n      isComplete: false,\n    };\n  }\n\n  handleChangeName = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n\n  handleChangeDueDate = (event) => {\n    this.setState({\n      dueDate: event.target.value,\n    });\n  };\n\n  handleChangeComplete = (event) => {\n    this.setState({\n      isComplete: event.target.checked,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(this.props.baseUrl + \"/tasks\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: this.state.name,\n        dueDate: this.state.dueDate,\n        isComplete: this.state.isComplete,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        this.props.addTask(data);\n        this.setState({\n          name: \"\",\n          dueDate: \"\",\n          isComplete: false,\n        });\n      })\n      .catch((error) => console.log({ Error: error }));\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group className=\"mb-3 task\">\n          <Form.Label>Task</Form.Label>\n          <Form.Control\n            md={{ span: 6, offset: 6 }}\n            type=\"text\"\n            onChange={(e) => this.handleChangeName(e)}\n            value={this.state.name}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3 date\">\n          <Form.Label>Due Date</Form.Label>\n          <Form.Control\n            type=\"date\"\n            onChange={(e) => this.handleChangeDueDate(e)}\n            value={this.state.dueDate}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3 complete\" controlId=\"formBasicCheckbox\">\n          <Form.Label>Completed?</Form.Label>\n          <Form.Check\n            type=\"checkbox\"\n            checked={this.state.isComplete}\n            onChange={(e) => this.handleChangeComplete(e)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n        <hr></hr>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}