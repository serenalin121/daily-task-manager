{"ast":null,"code":"var _jsxFileName = \"/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/EditForm.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleChangeDueDate = event => {\n      this.setState({\n        dueDate: event.target.value\n      });\n    };\n\n    this.handleChangeComplete = event => {\n      this.setState({\n        isComplete: event.target.checked\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      fetch(this.props.baseUrl + \"/tasks/\" + this.props.task._id, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          name: this.state.name,\n          dueDate: this.state.dueDate,\n          isComplete: this.state.isComplete\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        this.props.updateTask(data);\n      }).catch(error => console.log({\n        Error: error\n      }));\n    };\n\n    this.state = {\n      name: props.task.name,\n      dueDate: props.task.dueDate,\n      isComplete: props.task.isComplete\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: e => this.handleChangeName(e),\n          value: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"dueDate\",\n        name: \"dueDate\",\n        onChange: e => this.handleChangeDueDate(e),\n        value: this.state.dueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.isComplete,\n        onChange: e => this.handleChangeComplete(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        value: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/EditForm.js"],"names":["React","Component","NewForm","constructor","props","handleChangeName","event","setState","name","target","value","handleChangeDueDate","dueDate","handleChangeComplete","isComplete","checked","handleSubmit","preventDefault","fetch","baseUrl","task","_id","method","body","JSON","stringify","state","headers","then","res","json","data","updateTask","catch","error","console","log","Error","render","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: props.task.name,\n      dueDate: props.task.dueDate,\n      isComplete: props.task.isComplete,\n    };\n  }\n\n  handleChangeName = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n\n  handleChangeDueDate = (event) => {\n    this.setState({\n      dueDate: event.target.value,\n    });\n  };\n\n  handleChangeComplete = (event) => {\n    this.setState({\n      isComplete: event.target.checked,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(this.props.baseUrl + \"/tasks/\" + this.props.task._id, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        name: this.state.name,\n        dueDate: this.state.dueDate,\n        isComplete: this.state.isComplete,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        this.props.updateTask(data);\n      })\n      .catch((error) => console.log({ Error: error }));\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <td>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            onChange={(e) => this.handleChangeName(e)}\n            value={this.state.name}\n          />\n        </td>\n\n        <input\n          type=\"date\"\n          id=\"dueDate\"\n          name=\"dueDate\"\n          onChange={(e) => this.handleChangeDueDate(e)}\n          value={this.state.dueDate}\n        />\n        <input\n          type=\"checkbox\"\n          checked={this.state.isComplete}\n          onChange={(e) => this.handleChangeComplete(e)}\n        />\n        <input className=\"submit-button\" type=\"submit\" value=\"Update\" />\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}