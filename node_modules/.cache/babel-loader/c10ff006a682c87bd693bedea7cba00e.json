{"ast":null,"code":"var _jsxFileName = \"/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport EditForm from \"./EditForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = props => {\n  _s();\n\n  const [isInEditMode, setIsInEditMode] = useState(false);\n\n  const handledeleteTask = id => {\n    fetch(props.baseURL + \"/tasks/\" + id, {\n      method: \"DELETE\"\n    }).then(res => {\n      const findIndex = props.allTasks.findIndex(task => task._id === id);\n      props.deleteTask(findIndex);\n    });\n  };\n\n  const toggleEditFrom = () => {\n    setIsInEditMode(!isInEditMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.task.dueDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.task.isComplete,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleEditFrom,\n      children: !isInEditMode ? \"Edit\" : \"Cancel\"\n    }, props.task._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => handledeleteTask(props.task._id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, props.task._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"0zUrbqioMhXkIRO6BPiAM1z6ckI=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/Task.js"],"names":["useState","EditForm","Task","props","isInEditMode","setIsInEditMode","handledeleteTask","id","fetch","baseURL","method","then","res","findIndex","allTasks","task","_id","deleteTask","toggleEditFrom","name","dueDate","isComplete"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMM,gBAAgB,GAAIC,EAAD,IAAQ;AAC/BC,IAAAA,KAAK,CAACL,KAAK,CAACM,OAAN,GAAgB,SAAhB,GAA4BF,EAA7B,EAAiC;AACpCG,MAAAA,MAAM,EAAE;AAD4B,KAAjC,CAAL,CAEGC,IAFH,CAESC,GAAD,IAAS;AACf,YAAMC,SAAS,GAAGV,KAAK,CAACW,QAAN,CAAeD,SAAf,CAA0BE,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,EAAhD,CAAlB;AACAJ,MAAAA,KAAK,CAACc,UAAN,CAAiBJ,SAAjB;AACD,KALD;AAMD,GAPD;;AASA,QAAMK,cAAc,GAAG,MAAM;AAC3Bb,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAA,gBAAKD,KAAK,CAACY,IAAN,CAAWI;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKhB,KAAK,CAACY,IAAN,CAAWK;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEjB,KAAK,CAACY,IAAN,CAAWM,UAA3C;AAAuD,MAAA,QAAQ;AAA/D;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAA6B,MAAA,OAAO,EAAEH,cAAtC;AAAA,gBACG,CAACd,YAAD,GAAgB,MAAhB,GAAyB;AAD5B,OAAaD,KAAK,CAACY,IAAN,CAAWC,GAAxB;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMV,gBAAgB,CAACH,KAAK,CAACY,IAAN,CAAWC,GAAZ,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,KAASb,KAAK,CAACY,IAAN,CAAWC,GAApB;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5BD;;GAAMd,I;;KAAAA,I;AA8BN,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport EditForm from \"./EditForm\";\n\nconst Task = (props) => {\n  const [isInEditMode, setIsInEditMode] = useState(false);\n\n  const handledeleteTask = (id) => {\n    fetch(props.baseURL + \"/tasks/\" + id, {\n      method: \"DELETE\",\n    }).then((res) => {\n      const findIndex = props.allTasks.findIndex((task) => task._id === id);\n      props.deleteTask(findIndex);\n    });\n  };\n\n  const toggleEditFrom = () => {\n    setIsInEditMode(!isInEditMode);\n  };\n  return (\n    <tr key={props.task._id}>\n      <td>{props.task.name}</td>\n      <td>{props.task.dueDate}</td>\n      <input type=\"checkbox\" checked={props.task.isComplete} readOnly />\n      <button key={props.task._id} onClick={toggleEditFrom}>\n        {!isInEditMode ? \"Edit\" : \"Cancel\"}\n      </button>\n      <button type=\"submit\" onClick={() => handledeleteTask(props.task._id)}>\n        Delete\n      </button>\n    </tr>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}