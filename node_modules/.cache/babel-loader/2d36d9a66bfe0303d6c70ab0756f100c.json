{"ast":null,"code":"var _jsxFileName = \"/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/EditForm.js\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleChangeDueDate = event => {\n      this.setState({\n        dueDate: event.target.value\n      });\n    };\n\n    this.handleChangeComplete = event => {\n      this.setState({\n        isComplete: event.target.checked\n      });\n    };\n\n    this.handleSubmit = () => {\n      fetch(this.props.baseUrl + \"/tasks/\" + this.props.task._id, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          name: this.state.name,\n          dueDate: this.state.dueDate,\n          isComplete: this.state.isComplete\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        this.props.updateTask(data);\n      }).catch(error => console.log({\n        Error: error\n      }));\n    };\n\n    this.state = {\n      name: props.task.name,\n      dueDate: props.task.dueDate,\n      isComplete: props.task.isComplete\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            onChange: e => this.handleChangeName(e),\n            value: this.state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            id: \"dueDate\",\n            name: \"dueDate\",\n            onChange: e => this.handleChangeDueDate(e),\n            value: this.state.dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            checked: this.state.isComplete,\n            onChange: e => this.handleChangeComplete(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success\",\n            type: \"submit\",\n            value: \"Update\",\n            onClick: this.handleSubmit,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/serenalin/sei-bromeliad/projects/daily-task-manager/daily-task-manager-front-end/taskapp/src/components/EditForm.js"],"names":["React","Component","Button","Form","NewForm","constructor","props","handleChangeName","event","setState","name","target","value","handleChangeDueDate","dueDate","handleChangeComplete","isComplete","checked","handleSubmit","fetch","baseUrl","task","_id","method","body","JSON","stringify","state","headers","credentials","then","res","json","data","updateTask","catch","error","console","log","Error","render","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: props.task.name,\n      dueDate: props.task.dueDate,\n      isComplete: props.task.isComplete,\n    };\n  }\n\n  handleChangeName = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n\n  handleChangeDueDate = (event) => {\n    this.setState({\n      dueDate: event.target.value,\n    });\n  };\n\n  handleChangeComplete = (event) => {\n    this.setState({\n      isComplete: event.target.checked,\n    });\n  };\n\n  handleSubmit = () => {\n    fetch(this.props.baseUrl + \"/tasks/\" + this.props.task._id, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        name: this.state.name,\n        dueDate: this.state.dueDate,\n        isComplete: this.state.isComplete,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        this.props.updateTask(data);\n      })\n      .catch((error) => console.log({ Error: error }));\n  };\n\n  render() {\n    return (\n      <form>\n        <>\n          <td>\n            <Form.Control\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              onChange={(e) => this.handleChangeName(e)}\n              value={this.state.name}\n            />\n          </td>\n          <td>\n            <Form.Control\n              type=\"date\"\n              id=\"dueDate\"\n              name=\"dueDate\"\n              onChange={(e) => this.handleChangeDueDate(e)}\n              value={this.state.dueDate}\n            />\n          </td>\n\n          <td>\n            <Form.Check\n              type=\"checkbox\"\n              checked={this.state.isComplete}\n              onChange={(e) => this.handleChangeComplete(e)}\n            />\n          </td>\n          <td>\n            <Button\n              variant=\"outline-success\"\n              type=\"submit\"\n              value=\"Update\"\n              onClick={this.handleSubmit}\n            >\n              Update\n            </Button>\n          </td>\n        </>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}